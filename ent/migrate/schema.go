// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebook/ent/dialect/sql/schema"
	"github.com/facebook/ent/schema/field"
)

var (
	// NamespacesColumns holds the columns for the "namespaces" table.
	NamespacesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// NamespacesTable holds the schema information for the "namespaces" table.
	NamespacesTable = &schema.Table{
		Name:        "namespaces",
		Columns:     NamespacesColumns,
		PrimaryKey:  []*schema.Column{NamespacesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// NamespaceMembersColumns holds the columns for the "namespace_members" table.
	NamespaceMembersColumns = []*schema.Column{
		{Name: "namespace_id", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeString},
	}
	// NamespaceMembersTable holds the schema information for the "namespace_members" table.
	NamespaceMembersTable = &schema.Table{
		Name:       "namespace_members",
		Columns:    NamespaceMembersColumns,
		PrimaryKey: []*schema.Column{NamespaceMembersColumns[0], NamespaceMembersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "namespace_members_namespace_id",
				Columns: []*schema.Column{NamespaceMembersColumns[0]},

				RefColumns: []*schema.Column{NamespacesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "namespace_members_user_id",
				Columns: []*schema.Column{NamespaceMembersColumns[1]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// NamespaceAdminsColumns holds the columns for the "namespace_admins" table.
	NamespaceAdminsColumns = []*schema.Column{
		{Name: "namespace_id", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeString},
	}
	// NamespaceAdminsTable holds the schema information for the "namespace_admins" table.
	NamespaceAdminsTable = &schema.Table{
		Name:       "namespace_admins",
		Columns:    NamespaceAdminsColumns,
		PrimaryKey: []*schema.Column{NamespaceAdminsColumns[0], NamespaceAdminsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "namespace_admins_namespace_id",
				Columns: []*schema.Column{NamespaceAdminsColumns[0]},

				RefColumns: []*schema.Column{NamespacesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "namespace_admins_user_id",
				Columns: []*schema.Column{NamespaceAdminsColumns[1]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NamespacesTable,
		UsersTable,
		NamespaceMembersTable,
		NamespaceAdminsTable,
	}
)

func init() {
	NamespaceMembersTable.ForeignKeys[0].RefTable = NamespacesTable
	NamespaceMembersTable.ForeignKeys[1].RefTable = UsersTable
	NamespaceAdminsTable.ForeignKeys[0].RefTable = NamespacesTable
	NamespaceAdminsTable.ForeignKeys[1].RefTable = UsersTable
}
